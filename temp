# HTTPS server configuration.

# Redirect HTTP traffic to HTTPS.
server {
    listen 80;
    server_name app.denmarkangeles.com;
    index index.html;
    return 301 https://$host$request_uri;
}

# Serve HTTPS traffic using the Let's Encrypt certificate.
server {
    listen 443;
    server_name app.denmarkangeles.com;
    root /var/www/app.denmarkangeles.com;

    ssl_certificate /etc/letsencrypt/live/app.denmarkangeles.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/app.denmarkangeles.com/privkey.pem;
}


### working and tested
server {
    server_name denmarkangeles.com;
    root /home/denmarkangeles/public_html;
    index index.php index.html index.htm;
    
    location ~ \.php$ {
    include snippets/fastcgi-php.conf;

      # Nginx php-fpm sock config:
      fastcgi_pass unix:/run/php/denmarkangeles.sock;
      # Nginx php-cgi config :
      # Nginx PHP fastcgi_pass 127.0.0.1:9000;
    }

    # deny access to Apache .htaccess on Nginx with PHP, 
    # if Apache and Nginx document roots concur
    location ~ /\.ht {
      deny all;
    }

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/denmarkangeles.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/denmarkangeles.com/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}
server {
    if ($host = denmarkangeles.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    listen 80;
    server_name denmarkangeles.com;
    return 404; # managed by Certbot


}

